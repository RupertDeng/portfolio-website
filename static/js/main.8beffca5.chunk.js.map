{"version":3,"sources":["components/ProjectData.js","components/Navbar.js","components/Cell.js","components/WelcomeText.js","components/Card.js","components/ProjectView.js","components/Grid.js","components/WelcomeBanner.js","components/About.js","components/Footer.js","App.js","index.js"],"names":["projectList","projectId","projectName","projectCoverImage","projectShowcase","projectLink","projectRepo","projectDescription","NavBar","React","memo","resolutionTier","navHeight","navWidth","sizeUnit","navLayout","height","width","transform","menuWidth","handleLogoClick","window","scrollTo","top","behavior","useState","pjtClick","setPjtClick","className","style","src","alt","onKeyPress","e","key","onClick","onBlur","tabIndex","document","getElementById","scrollIntoView","menuList","forEach","p","push","onMouseDown","projectCard","rect","getBoundingClientRect","scrollTop","pageYOffset","documentElement","bottom","innerHeight","setTimeout","classList","toggle","handlePjtMenuClick","createProjectMenuList","Cell","cellId","cellSize","cellBorder","cellRow","cellCol","cellType","numOfRows","numOfCols","cellLayout","borderWidth","gridArea","animation","Math","random","neighborCell","filter","map","handleMouseHover","id","onMouseOver","onMouseOut","WelcomeText","startRow","startCol","endRow","endCol","textSize","welcomeTextLayout","fontSize","separateLineLayout","backgroundImage","Card","cardRow","cardCol","cardWidth","cardHeight","cardId","cardImage","cardLabel","cardClick","cardLayout","parseInt","split","slice","ProjectView","pjtWidth","pjtHeight","rowGap","colGap","pjtClicked","setPjtClicked","pjt","projectCards","row","col","project","generateProjectCards","stopPropagation","href","target","rel","Grid","gridLayout","gridTemplateRows","gridTemplateColumns","tier","type","cellList","banner","cols","Set","d","createWelcomeBanner","r","c","has","generateCells","About","aboutWidth","direction","aboutLayout","flexDirection","iconLayout","justifyContent","marginTop","icon","faGithub","faLinkedin","faEnvelopeSquare","Footer","footerWidth","footerLayout","App","smoothscroll","polyfill","innerWidth","windowWidth","setWindowWidth","useEffect","isMobile","orientation","navigator","userAgent","indexOf","handleResize","outerWidth","addEventListener","removeEventListener","size","rows","defineGridLayout","activeWidth","ReactDOM","render"],"mappings":"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","file":"static/js/main.8beffca5.chunk.js","sourcesContent":["export const projectList = [\r\n  {\r\n    projectId: 'project-1',\r\n    projectName: 'Responsive Portfolio Website',\r\n    projectCoverImage: '/images/project-images/project-1-cover.png',\r\n    projectShowcase: '/images/project-images/project-1-showcase.gif',\r\n    projectLink: '',\r\n    projectRepo: 'https://github.com/RupertDeng/portfolio-website',\r\n    projectDescription: `I always wanted a portfolio website since I started learning coding. Did some attempt before with plain javascript but the process is nowhere near smooth. React.js is here to the rescue. Resuable function components and delegation by passing props greatly simplified and streamlined the workflow.\\n\r\nI was shooting for a notebook vibe so thousands of cell components are employed to mimic the notebook grid. It might not be the most efficient way but hey, it works like a charm. With the help of React hooks, the grid can also respond to screen size change (similar to CSS mediaquery but with JS) and perform some really cool animations at events.\\n\r\nThings can be improved: 1) React re-rendering upon state change is expensive in my case so I still relied on some document query, a truly-React way may be more appreciable. 2) probably need to add a backend when I get many projects in store. 3) nudging vanilla CSS is exhausting, time to learn some friendly CSS library.`\r\n  }\r\n];","import React, {useState} from 'react';\r\nimport './Navbar.css';\r\nimport {projectList} from './ProjectData';\r\n\r\n\r\nexport const NavBar = React.memo(({resolutionTier, navHeight, navWidth, sizeUnit}) => {\r\n\r\n  //inline css object to definte navbar dimension and sub-menu width;\r\n  const navLayout = {\r\n    height: `${navHeight}px`,\r\n    width: `${navWidth}px`,\r\n    transform: `translateY(${sizeUnit/4}px)`\r\n  };\r\n\r\n  const menuWidth = {\r\n    width: `${resolutionTier === 'S' ? navWidth: (resolutionTier === 'M' ? navWidth *= 0.5 : navWidth *= 0.4)}px`\r\n  };\r\n\r\n  // handlers for click events on logo and menu\r\n  const handleLogoClick = () => window.scrollTo({top: 0, behavior: 'smooth'});\r\n  const handleAboutClick =() => document.getElementById('about').scrollIntoView({behavior: 'smooth'});\r\n  const [pjtClick, setPjtClick] = useState(false);\r\n  const handlePjtMenuClick = (projectId) => {\r\n    const projectCard = document.getElementById(projectId);\r\n    const rect = projectCard.getBoundingClientRect();\r\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n    window.scrollTo({\r\n      top: (rect.top+rect.bottom)/2 + scrollTop - window.innerHeight/2,\r\n      behavior: 'smooth'\r\n    });\r\n    setTimeout(() => projectCard.classList.toggle('focused'), 700);\r\n    setTimeout(() => projectCard.classList.toggle('focused'), 1200);\r\n    setPjtClick(false);\r\n  };\r\n\r\n  // generate project menu list\r\n  const createProjectMenuList = (projectList) => {\r\n    let menuList = [];\r\n    projectList.forEach(p => {\r\n      menuList.push(\r\n        (<li key={p.projectId + '-menu'} className='project-item' onMouseDown={()=>handlePjtMenuClick(p.projectId)}>\r\n          <u>{p.projectName}</u>\r\n        </li>)\r\n      );\r\n    });\r\n    return menuList;\r\n  };\r\n\r\n  const appLogo = '/images/logo-sketch.png';\r\n  \r\n\r\n  return (\r\n    <nav className={pjtClick ? 'nav-container expand' : 'nav-container'} style={navLayout}>\r\n      <div className='brand-container'>\r\n        <img className='app-logo' src={appLogo} alt='logo-sketch' \r\n        onKeyPress={e => {if (e.key==='Enter') handleLogoClick()}} onClick={handleLogoClick}>\r\n        </img>\r\n        <p className='app-name'>Ruopeng's <br></br> Code Journal</p>\r\n      </div>\r\n      <div className='menu-container'>\r\n        <button className={pjtClick ? 'project-nav opened' : 'project-nav'} onClick={()=>setPjtClick(!pjtClick)} onBlur={()=>setPjtClick(false)} tabIndex='-1'>Project</button>\r\n        <button className='about-nav' onClick={handleAboutClick}>About</button>\r\n        <ul className={pjtClick ? 'project-menu active' : 'project-menu'} style={menuWidth}>\r\n          {createProjectMenuList(projectList)}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n});\r\n\r\n\r\n","import React from 'react';\r\nimport './Cell.css';\r\n\r\nexport const Cell = React.memo(({cellId, cellSize, cellBorder, cellRow, cellCol, cellType, numOfRows, numOfCols}) => {\r\n\r\n  // inline style object to assign individual cell position, also setup random banner cell animation upon re-rendering;\r\n  const cellLayout = {\r\n    width: cellSize, \r\n    height: cellSize,\r\n    borderWidth: cellBorder,\r\n    gridArea: `${cellRow} / ${cellCol} / ${cellRow+1} / ${cellCol+1}`,\r\n    animation: cellType === 'cell-banner' ? `${1.5 + Math.random() * 2}s steps(4, end) 0s 3 alternate none running fadein` : 'none'\r\n  };\r\n\r\n\r\n  // handle mouse hover effect to hightlight the current cell and neighbor cell\r\n  let neighborCell = [[cellRow-1, cellCol], [cellRow+1, cellCol], [cellRow, cellCol+1], [cellRow, cellCol-1]];\r\n  neighborCell = neighborCell.filter(e => e[0]>0 && e[0]<=numOfRows && e[1]>0 && e[1]<=numOfCols).map(e => (e[0]-1)*numOfCols + e[1]);\r\n\r\n  const handleMouseHover = () => {\r\n    document.getElementById(cellId).classList.toggle('active-0');\r\n    neighborCell.forEach(e => document.getElementById(e).classList.toggle('active-1'));\r\n  };\r\n\r\n  const handleBannerClick = () => {\r\n    document.getElementById('grid-view').classList.toggle('animate');\r\n  }\r\n\r\n\r\n  return (\r\n    <div id={cellId} className={cellType} style={cellLayout} onClick={cellType==='cell-banner' ? handleBannerClick : null} \r\n    onMouseOver={handleMouseHover} onMouseOut={handleMouseHover}> </div>\r\n  );\r\n\r\n});\r\n","import React from 'react';\r\nimport './WelcomeText.css';\r\n\r\nexport const WelcomeText = React.memo(({resolutionTier}) => {\r\n\r\n  // definte welcome text location based on resolution tier\r\n  let startRow, startCol, endRow, endCol, textSize;\r\n\r\n  switch (resolutionTier) {\r\n    case 'S':\r\n      startRow = 24;\r\n      startCol = 3;\r\n      endRow = 26;\r\n      endCol = 23;\r\n      textSize = 0.75;\r\n      break;\r\n    case 'M':\r\n      startRow = 23;\r\n      startCol = 7;\r\n      endRow = 25;\r\n      endCol = 25;\r\n      textSize = 0.95;\r\n      break;\r\n    case 'L':\r\n      startRow = 23;\r\n      startCol = 10;\r\n      endRow = 25;\r\n      endCol = 28;\r\n      textSize = 1.2;\r\n      break;\r\n    default:\r\n      startRow = 23;\r\n      startCol = 10;\r\n      endRow = 26;\r\n      endCol = 28;\r\n      textSize = 1.2;\r\n  }\r\n\r\n  const welcomeTextLayout = {\r\n    gridArea: `${startRow} / ${startCol} / ${endRow} / ${endCol}`,\r\n    fontSize: `${textSize}rem`\r\n  };\r\n\r\n  // separate line is one row below welcome text\r\n  const separateLine = '/images/separate-line.svg'; \r\n  const separateLineLayout = {\r\n    gridArea: `${startRow+2} / ${startCol} / ${startRow+3} / ${endCol}`,\r\n    backgroundImage: `url(${separateLine})`\r\n  };\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <p className='welcome-text' style={welcomeTextLayout}>\r\n        <i>Welcome to my Code Journal! <br></br>\r\n        Here I note down things I made and am learning. </i>\r\n      </p>\r\n      <div className='separate-line' style={separateLineLayout}></div>\r\n    </>\r\n\r\n  );\r\n\r\n});","import React from 'react';\r\nimport './Card.css';\r\n\r\nexport const Card = React.memo(({cardRow, cardCol, cardWidth, cardHeight, cardId, cardImage, cardLabel, cardClick}) => {\r\n\r\n  const cardLayout = {\r\n    gridArea: `${cardRow} / ${cardCol} / ${cardRow+cardHeight} / ${cardCol+cardWidth}`,\r\n  };\r\n\r\n  const handleCardClick = () => {\r\n    cardClick(parseInt(cardId.split('-').slice(-1)))\r\n  };\r\n\r\n\r\n  return (\r\n    <div id={cardId} className='project-card' style={cardLayout} onClick={handleCardClick}>\r\n      <div className='card-image' style={{backgroundImage: `url(${cardImage})`}}></div>\r\n      <p className='card-label'>\r\n        <b>{cardLabel}</b>\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n});","import React from 'react';\r\nimport './ProjectView.css';\r\nimport {Card} from './Card';\r\nimport {projectList} from './ProjectData';\r\n\r\nexport const ProjectView = React.memo(({resolutionTier, numOfRows, numOfCols}) => {\r\n  let startRow, startCol, pjtWidth, pjtHeight, rowGap, colGap;\r\n\r\n  switch (resolutionTier) {\r\n    case 'S':\r\n      startRow = 30;\r\n      startCol = 5;\r\n      pjtWidth = 16;\r\n      pjtHeight = 16;\r\n      rowGap = 2;\r\n      colGap = 70;\r\n      break;\r\n    case 'M':\r\n      startRow = 29;\r\n      startCol = 3;\r\n      pjtWidth = 12;\r\n      pjtHeight = 12;\r\n      rowGap = 2;\r\n      colGap = 2;\r\n      break;\r\n    case 'L':\r\n      startRow = 29;\r\n      startCol = 3;\r\n      pjtWidth = 10;\r\n      pjtHeight = 10;\r\n      rowGap = 1;\r\n      colGap = 1;\r\n      break;\r\n    default:\r\n      startRow = 29;\r\n      startCol = 4;\r\n      pjtWidth = 14;\r\n      pjtHeight = 14;\r\n      rowGap = 2;\r\n      colGap = 2;\r\n  }\r\n\r\n  const [pjtClicked, setPjtClicked] = React.useState(0);\r\n  const pjt = pjtClicked === 0 ? null : projectList[pjtClicked-1];\r\n\r\n  const generateProjectCards = (projectList) => {\r\n    let projectCards = [];\r\n    let row = startRow;\r\n    let col = startCol;\r\n\r\n    for (const project of projectList) {\r\n      projectCards.push((<Card key={project.projectId} cardRow={row} cardCol={col} cardWidth={pjtWidth} cardHeight={pjtHeight}\r\n        cardId={project.projectId} cardImage={project.projectCoverImage} cardLabel={project.projectName} cardClick={setPjtClicked} />));\r\n      if (col + pjtWidth*2 + colGap <= numOfCols) {\r\n        col = col + pjtWidth + colGap\r\n      } else {\r\n        row = row + pjtHeight + rowGap;\r\n        col = startCol;\r\n      }\r\n    }\r\n\r\n    return projectCards;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {generateProjectCards(projectList)}\r\n      {pjtClicked !== 0 && (\r\n        <div className='popup-container' onClick={()=>setPjtClicked(0)}>\r\n          <div className='popup-box' onClick={e => e.stopPropagation()}>\r\n            <img className='project-showcase' src={pjt.projectShowcase} alt={pjt.projectId + 'showcase'}></img>\r\n            <div className='project-detail'>\r\n              <p className='project-title'><b>{pjt.projectName}</b></p>\r\n              <p className='project-desc'>{pjt.projectDescription}</p>\r\n              {(pjt.projectLink !== '' || pjt.projectRepo !== '') && (\r\n              <div className='project-links'>\r\n                {pjt.projectLink !== '' && (<a className='pjtlink' href={pjt.projectLink} target=\"_blank\" rel=\"noopener noreferrer\"><u>Link to App</u></a>)}\r\n                {pjt.projectRepo !== '' && (<a className='pjtlink' href={pjt.projectRepo} target=\"_blank\" rel=\"noopener noreferrer\"><u>Link to Github</u></a>)}\r\n              </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n});","import React from 'react';\r\nimport {Cell} from './Cell';\r\nimport {WelcomeText} from './WelcomeText';\r\nimport {createWelcomeBanner} from './WelcomeBanner';\r\nimport {ProjectView} from './ProjectView';\r\nimport './Grid.css';\r\n\r\n\r\nexport const Grid = React.memo(({resolutionTier, numOfRows, numOfCols, cellSize, cellBorder}) => {\r\n\r\n  // inline style object to assign grid layout\r\n  const gridLayout = {\r\n    gridTemplateRows: `repeat(${numOfRows}, ${cellSize}px))`,\r\n    gridTemplateColumns: `repeat(${numOfCols}, ${cellSize}px))`,\r\n  };\r\n\r\n  // function to generate the cells in grid\r\n  const generateCells = (tier, cellSize, cellBorder, numOfRows, numOfCols) => {\r\n    const cellList = [];\r\n    const banner = createWelcomeBanner(tier, numOfCols);\r\n    let type, id;\r\n    for (let r = 1; r <= numOfRows; r++) {\r\n      for (let c = 1; c <= numOfCols; c++) {\r\n        id = (r-1) * numOfCols + c;\r\n        if (banner.has(id)) {\r\n          type = 'cell-banner';\r\n        } else {\r\n          type = 'cell-default';\r\n        }\r\n        cellList.push((<Cell cellId={id} key={id} cellSize={cellSize} cellBorder={cellBorder} cellRow={r} cellCol={c} cellType={type} \r\n          numOfRows={numOfRows} numOfCols={numOfCols} />))\r\n      }     \r\n    }\r\n    return cellList;\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <>\r\n      <div className='grid-container'>\r\n        <div id='grid-view' className='grid' style={gridLayout}>\r\n          {generateCells(resolutionTier, cellSize, cellBorder, numOfRows, numOfCols)}\r\n          <WelcomeText resolutionTier={resolutionTier} />\r\n          <ProjectView resolutionTier={resolutionTier} numOfRows={numOfRows} numOfCols={numOfCols} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n\r\n});","export const createWelcomeBanner = (tier, cols) => {\r\n  let startRow, startCol;\r\n\r\n  // pixel dot list of \"HELLO WORLD\" with first pixel starting from [0, 0]\r\n  const dotList = [\r\n    [0, 0], [0, 2], [0, 4], [0, 5], [0, 6], [0, 8], [0, 12], \r\n    [0, 16], [0, 17], [0, 18], [0, 19], [1, 0], [1, 2], [1, 4], \r\n    [1, 8], [1, 12], [1, 16], [1, 19], [2, 0], [2, 1], [2, 2], \r\n    [2, 4], [2, 5], [2, 8], [2, 12], [2, 16], [2, 19], [3, 0], \r\n    [3, 2], [3, 4], [3, 8], [3, 12], [3, 16], [3, 19], [4, 0], \r\n    [4, 2], [4, 4], [4, 5], [4, 6], [4, 8], [4, 9], [4, 10], \r\n    [4, 12], [4, 13], [4, 14], [4, 16], [4, 17], [4, 18], [4, 19], \r\n    [6, 0], [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], \r\n    [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], \r\n    [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [8, 0], [8, 4], \r\n    [8, 6], [8, 7], [8, 8], [8, 10], [8, 11], [8, 12], [8, 14], \r\n    [8, 17], [8, 18], [9, 0], [9, 4], [9, 6], [9, 8], [9, 10], \r\n    [9, 12], [9, 14], [9, 17], [9, 19], [10, 0], [10, 2], [10, 4], \r\n    [10, 6], [10, 8], [10, 10], [10, 11], [10, 14], [10, 17], [10, 19], \r\n    [11, 0], [11, 2], [11, 4], [11, 6], [11, 8], [11, 10], [11, 12], \r\n    [11, 14], [11, 17], [11, 19], [12, 1], [12, 3], [12, 6], [12, 7], \r\n    [12, 8], [12, 10], [12, 12], [12, 14], [12, 15], [12, 17], [12, 18]\r\n  ];\r\n\r\n  // actual \"HELLO WORLD\" starting position in grid depending on resolution tier\r\n  switch (tier) {\r\n    case 'S':\r\n      startRow = 8;\r\n      startCol = 3;\r\n      break;\r\n    case 'M':\r\n      startRow = 7;\r\n      startCol = 6;\r\n      break;\r\n    case 'L':\r\n      startRow = 7;\r\n      startCol = 9\r\n      break;\r\n    default:\r\n      startRow = 7;\r\n      startCol = 9;\r\n  }\r\n\r\n  \r\n  \r\n  return new Set(dotList.map((d) => (d[0] + startRow-1) * cols + d[1] + startCol));\r\n};","import React from 'react';\r\nimport './About.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faLinkedin, faGithub} from '@fortawesome/free-brands-svg-icons';\r\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const About = React.memo(({resolutionTier, aboutWidth}) => {\r\n\r\n  //inline style object for About Me section layout\r\n  const direction = resolutionTier === 'S' ? 'column' : 'row';\r\n  \r\n  const aboutLayout = {\r\n    width: `${aboutWidth}px`,\r\n    flexDirection: `${direction}`\r\n  };\r\n\r\n  const fontSize = {\r\n    fontSize: `${resolutionTier === 'L' ? 1 : 0.9}rem`\r\n  };\r\n\r\n  const iconLayout = {\r\n    justifyContent: resolutionTier === 'S' ? 'center' : 'flex-end',\r\n    marginTop: resolutionTier === 'S' ? '10px' : '5px'\r\n  };\r\n\r\n  const pictureSelf = '/images/picture-self.png';\r\n\r\n\r\n  return (\r\n    <div id='about' className='about-container' style={aboutLayout}>\r\n      <img className='picture-self' src={pictureSelf} alt='me'></img>\r\n      <div className='text-container'>\r\n        <p className='self-intro' style={fontSize}>\r\n          The name is <b>Ruopeng (Rupert) Deng</b>. Majored in Physics and Ph.D. in Materials Science.\r\n          <br></br>\r\n          After dedicating myself over a decade to studying physical world, specifically semiconductor processing, I started to wonder how the virtual world works under the hood.\r\n          <br></br>\r\n          The thought pulled me deeply in, and I began to teach myself, from simple python 'Hello World' to data structure and algorithm, to advanced topics like distributed system.\r\n          The more I learned, the more I appreciate the underlying intricacy and wisdom. It is truly fascinating!\r\n          <br></br>\r\n          The undertaking of learning and trying new things has never been so thrilling. I do hope that I could keep up this journey of exploration, \"to infinity and beyond\" ...\r\n        </p>\r\n        <div className='contact-icon-container' style={iconLayout}>\r\n          <a href='https://github.com/RupertDeng' target=\"_blank\" rel=\"noopener noreferrer\" className='contact-icon'>\r\n            <FontAwesomeIcon icon={faGithub}></FontAwesomeIcon>\r\n          </a>\r\n          <a href='https://www.linkedin.com/in/ruopeng-deng-2980244b/' target=\"_blank\" rel=\"noopener noreferrer\" className='contact-icon'>\r\n            <FontAwesomeIcon icon={faLinkedin}></FontAwesomeIcon>\r\n          </a>\r\n          <a href='mailto:rupert.deng@gmail.com' className='contact-icon'>\r\n            <FontAwesomeIcon icon={faEnvelopeSquare}></FontAwesomeIcon>\r\n          </a>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n});","import React from 'react';\r\nimport './Footer.css';\r\n\r\nexport const Footer = React.memo(({footerWidth}) => {\r\n\r\n  const footerLayout = {\r\n    width: `${footerWidth}px`\r\n  };\r\n\r\n  return (\r\n    <div className='footer' style={footerLayout}>\r\n      <p className='footer-text'>Copyright @ Ruopeng Deng 2021</p>\r\n    </div>\r\n  );\r\n\r\n});","import {NavBar} from './components/Navbar';\r\nimport {Grid} from './components/Grid';\r\nimport {About} from './components/About';\r\nimport {Footer} from './components/Footer';\r\nimport './App.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport smoothscroll from 'smoothscroll-polyfill';\r\n\r\nfunction App() {\r\n\r\n  // kick off smoothscroll to handle ios scroll behavior;\r\n  smoothscroll.polyfill();\r\n\r\n  // useState and useEffect to update the window width upon resizing\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const isMobile = (typeof window.orientation !== \"undefined\") || (navigator.userAgent.indexOf('IEMobile') !== -1);\r\n    const handleResize = () => {\r\n      if (!isMobile) {\r\n        setWindowWidth(window.innerWidth);\r\n      } else {\r\n        setWindowWidth(window.outerWidth - 10);\r\n      }\r\n    }\r\n    window.addEventListener('orientationchange', handleResize);\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {window.removeEventListener('resize', handleResize); window.removeEventListener('orientationchange', handleResize)};\r\n  }, [])\r\n\r\n  // definte grid layout for responsiveness\r\n  const defineGridLayout = (width) => {\r\n    let tier, size, rows, cols;\r\n\r\n    if (width <= 576) {\r\n      tier = 'S';\r\n      size = 15;\r\n      rows = 100;\r\n      cols = 24;\r\n    } else if (width <= 992) {\r\n      tier = 'M';\r\n      size = 20;\r\n      rows = 67;\r\n      cols = 30;\r\n    } else {\r\n      tier = 'L'\r\n      size = 25;\r\n      rows = 65;\r\n      cols = 36;\r\n    }\r\n\r\n    return [tier, rows, cols, size];\r\n  };\r\n\r\n  const [resolutionTier, numOfRows, numOfCols, cellSize] = defineGridLayout(windowWidth);\r\n  const cellBorder = 1;\r\n\r\n  // definte activeWidth and sizeUnit using the grid information for other components\r\n  const activeWidth = cellSize * numOfCols;\r\n  const sizeUnit = cellSize;\r\n  const navHeight = sizeUnit * (resolutionTier === 'S' ? 3.5 : 2.5);\r\n  const navWidth = activeWidth - sizeUnit;\r\n\r\n\r\n  return (\r\n    <div className='app'>\r\n      <NavBar resolutionTier={resolutionTier} navHeight={navHeight} navWidth={navWidth} sizeUnit={sizeUnit}/>\r\n      <Grid resolutionTier={resolutionTier} numOfRows={numOfRows} numOfCols={numOfCols} cellSize={cellSize} cellBorder={cellBorder} />\r\n      <About resolutionTier={resolutionTier} aboutWidth={activeWidth}/>\r\n      <Footer footerWidth={activeWidth} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}