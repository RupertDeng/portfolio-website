{"version":3,"sources":["components/ProjectData.js","components/Navbar.js","components/Cell.js","components/WelcomeText.js","components/Card.js","components/ProjectView.js","components/Grid.js","components/WelcomeBanner.js","components/About.js","components/Footer.js","App.js","index.js"],"names":["projectList","projectId","projectName","projectCoverImage","projectShowcase","projectLink","projectRepo","projectDescription","NavBar","React","memo","resolutionTier","navHeight","navWidth","sizeUnit","navLayout","height","width","transform","menuWidth","useState","pjtClick","setPjtClick","pjtButtonRef","useRef","className","style","src","alt","onClick","window","scrollTo","top","behavior","ref","current","focus","onBlur","document","getElementById","scrollIntoView","menuList","slice","reverse","forEach","p","push","onMouseDown","projectCard","rect","getBoundingClientRect","scrollTop","pageYOffset","documentElement","bottom","innerHeight","setTimeout","classList","toggle","handlePjtMenuClick","createProjectMenuList","Cell","isMobile","cellId","cellSize","cellBorder","cellRow","cellCol","cellType","numOfRows","numOfCols","cellLayout","borderWidth","gridArea","animation","Math","random","neighborCell","filter","e","map","handleMouseHover","id","querySelectorAll","c","add","remove","grid","onMouseOver","onMouseOut","WelcomeText","startRow","startCol","endRow","endCol","textSize","welcomeTextLayout","fontSize","separateLineLayout","backgroundImage","Card","cardRow","cardCol","cardWidth","cardHeight","cardId","cardImage","cardLabel","cardClick","cardLayout","parseInt","split","ProjectView","pjtWidth","pjtHeight","rowGap","colGap","pjtClicked","setPjtClicked","pjt","useEffect","handleTouchMove","preventDefault","body","overflowY","addEventListener","passive","removeEventListener","modalRef","projectCards","row","col","pjtList","project","generateProjectCards","stopPropagation","onTouchMove","scrollHeight","clientHeight","href","target","rel","Grid","gridLayout","gridTemplateRows","gridTemplateColumns","tier","type","cellList","banner","cols","Set","d","createWelcomeBanner","r","has","generateCells","About","aboutWidth","direction","aboutLayout","flexDirection","iconLayout","justifyContent","marginTop","icon","faGithub","faLinkedin","faEnvelopeSquare","Footer","footerWidth","footerLayout","App","orientation","navigator","userAgent","indexOf","smoothscroll","polyfill","defineResolutionTier","innerWidth","setResolutionTier","handleResize","outerWidth","orientationChange","sizeChange","size","rows","defineGridLayout","activeWidth","ReactDOM","render"],"mappings":"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","file":"static/js/main.c30b206d.chunk.js","sourcesContent":["export const projectList = [\r\n  {\r\n    projectId: 'project-1',\r\n    projectName: 'Responsive Portfolio Website',\r\n    projectCoverImage: '/images/project-images/project-1-cover.jfif',\r\n    projectShowcase: '/images/project-images/project-1-showcase.gif',\r\n    projectLink: '',\r\n    projectRepo: 'https://github.com/RupertDeng/portfolio-website',\r\n    projectDescription: `I always wanted a portfolio website since I started learning coding. Did some attempt before with plain javascript but the process is nowhere near smooth. React.js is here to the rescue. Resuable function components and delegation by passing props greatly simplified and streamlined the workflow.\\n\r\nI was shooting for a notebook vibe so thousands of cell components are employed to mimic the notebook grid. It might not be the most efficient way but hey, it works like a charm. With the help of React hooks, the grid can also respond to screen size change (similar to CSS mediaquery but with JS) and perform some really cool animations at events.`\r\n  },\r\n  {\r\n    projectId: 'project-2',\r\n    projectName: 'Hands-free Cursor',\r\n    projectCoverImage: '/images/project-images/project-2-cover.jpg',\r\n    projectShowcase: '/images/project-images/project-2-showcase.gif',\r\n    projectLink: '',\r\n    projectRepo: 'https://github.com/RupertDeng/handsfree-cursor',\r\n    projectDescription: `The idea actually came out when I was coding my first project. There were many times that I need to pause and search online for some info. So my hands were on and off the keyboard frequently till it gets annoying. I wish something else could help move mouse cursor while keeping my hands always ready to type. The initial thought was to track eyeball movement, but it turns out that the implmementation might not be reliable since eyeball movement is rather tiny. \\n\r\nI ended up with tracking face movement. As a concept, the app uses OpenCV and trained dlib ML model to detect key face landmark points, and drives mouse cursor via pyautogui library in a parallel process. I also added speed control, and mouse-click function, by mouth opening/closing. As you can see from the demo, it definitely works albeit some practice might be needed to tame it :-)`\r\n  },\r\n  {\r\n    projectId: 'project-3',\r\n    projectName: 'Youtube Air-gesture',\r\n    projectCoverImage: '/images/project-images/project-3-cover.jpg',\r\n    projectShowcase: '/images/project-images/project-3-showcase.gif',\r\n    projectLink: '',\r\n    projectRepo: 'https://github.com/RupertDeng/youtube-airgesture',\r\n    projectDescription: `This is another camera-based gadget. As the name implies, the app simply uses hand gestures to control browser youtube video playback. Hey, you'd admit that there were occasions your hands are too clumsy or messy to touch mouse/keyboard, where this gadget can be useful. \\n\r\nThis time, I used the trained ML model from Mediapipe instead to get more robust landmark detection, and custom-made the hand gesture identification class. pyautogui library then activates key-press on browser based on the gesture identified to control youtube video, such as pause/resume, turn on/off caption, full screen, seek forward/backward, speed up/down.`\r\n  },\r\n  {\r\n    projectId: 'project-4',\r\n    projectName: 'Odd-Number Web App',\r\n    projectCoverImage: '/images/project-images/project-4-cover.jpg',\r\n    projectShowcase: '/images/project-images/project-4-showcase.gif',\r\n    projectLink: 'https://odd-number.netlify.app/',\r\n    projectRepo: 'https://github.com/RupertDeng/odd-number.frontend',\r\n    projectDescription: `I guess everyone gets random unknown phone calls. And I seldom found useful information online when that happens to me. So why not build a website where the good people on the internet can share info to help each other? It is also a perfect project to learn all the key essentials in Full Stack Web App development. \\n\r\nHere user can search for any phone number, and one who knows some info on the number can post messages to alert others. The messages can be up-voted or down-voted just like any internet posts. As you can see in the end of the demo above, I also implemented a simple ip-address rate-limiter so the system won't get abused too much. \\n\r\nTechnical side, user-input data are stored in MongoDB Atlas, with phone number as primary key. Frontend of the app is created with React.js, and styled in Bootstrap which gives me much better experience than vanilla CSS. Backend server is enabled by Flask in a RESTful implmentation. Both frontend and backend are auto-deployed from Github repo, onto Netlify and Heroku platforms respectively.`\r\n  }\r\n];","import React, {useState} from 'react';\r\nimport './Navbar.css';\r\nimport {projectList} from './ProjectData';\r\n\r\n\r\nexport const NavBar = React.memo(({resolutionTier, navHeight, navWidth, sizeUnit}) => {\r\n\r\n  //inline css object to definte navbar dimension and sub-menu width;\r\n  const navLayout = {\r\n    height: `${navHeight}px`,\r\n    width: `${navWidth}px`,\r\n    transform: `translateY(${sizeUnit/4}px)`\r\n  };\r\n\r\n  const menuWidth = {\r\n    width: `${resolutionTier === 'S' ? navWidth: (resolutionTier === 'M' ? navWidth *= 0.5 : navWidth *= 0.4)}px`\r\n  };\r\n\r\n  // handlers for click events on logo and menu\r\n  const handleLogoClick = () => window.scrollTo({top: 0, behavior: 'smooth'});\r\n  const handleAboutClick =() => document.getElementById('about').scrollIntoView({behavior: 'smooth'});\r\n  const [pjtClick, setPjtClick] = useState(false);\r\n  const pjtButtonRef = React.useRef();\r\n  const handlePjtClick = () => {\r\n    if (pjtClick) {\r\n      setPjtClick(false);\r\n    } else {\r\n      setPjtClick(true);\r\n      pjtButtonRef.current.focus();\r\n    }\r\n  }\r\n  const handlePjtMenuClick = (projectId) => {\r\n    const projectCard = document.getElementById(projectId);\r\n    const rect = projectCard.getBoundingClientRect();\r\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n    window.scrollTo({\r\n      top: (rect.top+rect.bottom)/2 + scrollTop - window.innerHeight/2,\r\n      behavior: 'smooth'\r\n    });\r\n    setTimeout(() => projectCard.classList.toggle('focused'), 600);\r\n    setTimeout(() => projectCard.classList.toggle('focused'), 1300);\r\n    setPjtClick(false);\r\n  };\r\n\r\n  // generate project menu list\r\n  const createProjectMenuList = (projectList) => {\r\n    let menuList = [];\r\n    const pjtList = projectList.slice().reverse();\r\n    \r\n    pjtList.forEach(p => {\r\n      menuList.push(\r\n        (<li key={p.projectId + '-menu'} className='project-item' onMouseDown={()=>handlePjtMenuClick(p.projectId)}>\r\n          <u>{p.projectName}</u>\r\n        </li>)\r\n      );\r\n    });\r\n    return menuList;\r\n  };\r\n\r\n\r\n  // link to app logo;\r\n  const appLogo = '/images/logo-sketch.png';\r\n  \r\n  \r\n\r\n  return (\r\n    <nav className={pjtClick ? 'nav-container expand' : 'nav-container'} style={navLayout}>\r\n      <div className='brand-container'>\r\n        <img className='app-logo' src={appLogo} alt='logo-sketch' onClick={handleLogoClick}>\r\n        </img>\r\n        <p className='app-name'>Ruopeng's <br></br> Code Journal</p>\r\n      </div>\r\n      <div className='menu-container'>\r\n        <button ref={pjtButtonRef} className={pjtClick ? 'project-nav opened' : 'project-nav'} onClick={handlePjtClick} onBlur={()=>setPjtClick(false)}>Project</button>\r\n        <button className='about-nav' onClick={handleAboutClick}>About</button>\r\n        <ul className={pjtClick ? 'project-menu active' : 'project-menu'} style={menuWidth}>\r\n          {createProjectMenuList(projectList)}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n});\r\n\r\n\r\n","import React from 'react';\r\nimport './Cell.css';\r\n\r\nexport const Cell = React.memo(({isMobile, cellId, cellSize, cellBorder, cellRow, cellCol, cellType, numOfRows, numOfCols}) => {\r\n\r\n  // inline style object to assign individual cell position, also setup random banner cell animation upon re-rendering;\r\n  const cellLayout = {\r\n    width: cellSize, \r\n    height: cellSize,\r\n    borderWidth: cellBorder,\r\n    gridArea: `${cellRow} / ${cellCol} / ${cellRow+1} / ${cellCol+1}`,\r\n    animation: cellType === 'cell-banner' ? `${1.5 + Math.random() * 2}s steps(4, end) 0s 3 alternate none running fadein` : 'none'\r\n  };\r\n\r\n\r\n  // handle mouse hover effect to hightlight the current cell and neighbor cell\r\n  let neighborCell = [[cellRow-1, cellCol], [cellRow+1, cellCol], [cellRow, cellCol+1], [cellRow, cellCol-1]];\r\n  neighborCell = neighborCell.filter(e => e[0]>0 && e[0]<=numOfRows && e[1]>0 && e[1]<=numOfCols).map(e => (e[0]-1)*numOfCols + e[1]);\r\n\r\n  const handleMouseHover = () => {\r\n    if (!isMobile) {\r\n      document.getElementById(cellId).classList.toggle('active-0');\r\n      neighborCell.forEach(e => document.getElementById(e).classList.toggle('active-1'));\r\n    }\r\n  };\r\n\r\n  const handleBannerClick = () => {\r\n    if (!isMobile) {\r\n      const grid = document.getElementById('grid-view');\r\n      grid.classList.add('animate');\r\n      setTimeout(()=>grid.classList.remove('animate'), 1000);\r\n    } else {\r\n      const banners = document.querySelectorAll('.cell-banner');\r\n      banners.forEach(c=>{\r\n        c.classList.add('shrink');\r\n        setTimeout(()=>c.classList.remove('shrink'), 1000);\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleCellClick = () => {\r\n    if (isMobile) {\r\n      document.getElementById(cellId).classList.add('active-0');\r\n      neighborCell.forEach(e=>document.getElementById(e).classList.add('active-1'));\r\n      setTimeout(()=>{\r\n        document.getElementById(cellId).classList.remove('active-0');\r\n        neighborCell.forEach(e=>document.getElementById(e).classList.remove('active-1'));\r\n      }, 500)\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div id={cellId} className={cellType} style={cellLayout} onClick={cellType==='cell-banner' ? handleBannerClick : handleCellClick} \r\n    onMouseOver={handleMouseHover} onMouseOut={handleMouseHover}> </div>\r\n  );\r\n\r\n});\r\n","import React from 'react';\r\nimport './WelcomeText.css';\r\n\r\nexport const WelcomeText = React.memo(({resolutionTier}) => {\r\n\r\n  // definte welcome text location based on resolution tier\r\n  let startRow, startCol, endRow, endCol, textSize;\r\n\r\n  switch (resolutionTier) {\r\n    case 'S':\r\n      startRow = 24;\r\n      startCol = 3;\r\n      endRow = 26;\r\n      endCol = 23;\r\n      textSize = 0.75;\r\n      break;\r\n    case 'M':\r\n      startRow = 23;\r\n      startCol = 7;\r\n      endRow = 25;\r\n      endCol = 25;\r\n      textSize = 0.95;\r\n      break;\r\n    case 'L':\r\n      startRow = 23;\r\n      startCol = 10;\r\n      endRow = 25;\r\n      endCol = 28;\r\n      textSize = 1.2;\r\n      break;\r\n    default:\r\n      startRow = 23;\r\n      startCol = 10;\r\n      endRow = 26;\r\n      endCol = 28;\r\n      textSize = 1.2;\r\n  }\r\n\r\n  const welcomeTextLayout = {\r\n    gridArea: `${startRow} / ${startCol} / ${endRow} / ${endCol}`,\r\n    fontSize: `${textSize}rem`\r\n  };\r\n\r\n  // separate line is one row below welcome text\r\n  const separateLine = '/images/separate-line.svg'; \r\n  const separateLineLayout = {\r\n    gridArea: `${startRow+2} / ${startCol} / ${startRow+3} / ${endCol}`,\r\n    backgroundImage: `url(${separateLine})`\r\n  };\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <p className='welcome-text' style={welcomeTextLayout}>\r\n        <i>Welcome to my Code Journal! <br></br>\r\n        Here I note down things I made and am learning. </i>\r\n      </p>\r\n      <div className='separate-line' style={separateLineLayout}></div>\r\n    </>\r\n\r\n  );\r\n\r\n});","import React from 'react';\r\nimport './Card.css';\r\n\r\nexport const Card = React.memo(({cardRow, cardCol, cardWidth, cardHeight, cardId, cardImage, cardLabel, cardClick}) => {\r\n\r\n  const cardLayout = {\r\n    gridArea: `${cardRow} / ${cardCol} / ${cardRow+cardHeight} / ${cardCol+cardWidth}`,\r\n  };\r\n\r\n  const handleCardClick = () => {\r\n    cardClick(parseInt(cardId.split('-').slice(-1)))\r\n  };\r\n\r\n\r\n  return (\r\n    <div id={cardId} className='project-card' style={cardLayout} onClick={handleCardClick}>\r\n      <div className='card-image' style={{backgroundImage: `url(${cardImage})`}}></div>\r\n      <p className='card-label'>\r\n        <b>{cardLabel}</b>\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n});","import React from 'react';\r\nimport './ProjectView.css';\r\nimport {Card} from './Card';\r\nimport {projectList} from './ProjectData';\r\n\r\nexport const ProjectView = React.memo(({resolutionTier, numOfRows, numOfCols}) => {\r\n  let startRow, startCol, pjtWidth, pjtHeight, rowGap, colGap;\r\n\r\n  switch (resolutionTier) {\r\n    case 'S':\r\n      startRow = 30;\r\n      startCol = 5;\r\n      pjtWidth = 16;\r\n      pjtHeight = 16;\r\n      rowGap = 2;\r\n      colGap = 70;\r\n      break;\r\n    case 'M':\r\n      startRow = 29;\r\n      startCol = 3;\r\n      pjtWidth = 12;\r\n      pjtHeight = 12;\r\n      rowGap = 2;\r\n      colGap = 2;\r\n      break;\r\n    case 'L':\r\n      startRow = 29;\r\n      startCol = 3;\r\n      pjtWidth = 10;\r\n      pjtHeight = 10;\r\n      rowGap = 1;\r\n      colGap = 1;\r\n      break;\r\n    default:\r\n      startRow = 29;\r\n      startCol = 4;\r\n      pjtWidth = 14;\r\n      pjtHeight = 14;\r\n      rowGap = 2;\r\n      colGap = 2;\r\n  }\r\n\r\n  const [pjtClicked, setPjtClicked] = React.useState(0);\r\n  const pjt = pjtClicked === 0 ? null : projectList[pjtClicked-1];\r\n\r\n  //disable background scroll when modal is open, partially working on ios\r\n  React.useEffect(() => {\r\n    const handleTouchMove = e => e.preventDefault();\r\n    if (pjtClicked !== 0) {\r\n      document.body.style.overflowY = 'hidden';\r\n      document.addEventListener('touchmove', handleTouchMove, {passive: false});\r\n    } else {\r\n      document.body.style.overflowY = 'overlay';\r\n    }\r\n    return () => document.removeEventListener('touchmove', handleTouchMove);\r\n  }, [pjtClicked]);\r\n\r\n  const modalRef = React.useRef();\r\n\r\n  //function to generate project cards\r\n  const generateProjectCards = (projectList) => {\r\n    let projectCards = [];\r\n    let row = startRow;\r\n    let col = startCol;\r\n    const pjtList = projectList.slice().reverse();\r\n\r\n    for (const project of pjtList) {\r\n      projectCards.push((<Card key={project.projectId} cardRow={row} cardCol={col} cardWidth={pjtWidth} cardHeight={pjtHeight}\r\n        cardId={project.projectId} cardImage={project.projectCoverImage} cardLabel={project.projectName} cardClick={setPjtClicked} />));\r\n      if (col + pjtWidth*2 + colGap <= numOfCols) {\r\n        col = col + pjtWidth + colGap\r\n      } else {\r\n        row = row + pjtHeight + rowGap;\r\n        col = startCol;\r\n      }\r\n    }\r\n\r\n    return projectCards;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {generateProjectCards(projectList)}\r\n      {pjtClicked !== 0 && (\r\n        <div className='popup-container' onClick={()=>setPjtClicked(0)}>\r\n          <div className='popup-box'>\r\n            <img className='project-showcase' src={pjt.projectShowcase} alt={pjt.projectId + 'showcase'} onClick={e => e.stopPropagation()}></img>\r\n            <div className='project-detail' onClick={e => e.stopPropagation()}>\r\n              <p className='project-title'><b>{pjt.projectName}</b></p>\r\n              <p className='project-desc' ref={modalRef} onTouchMove={e=>{\r\n                if (modalRef.current.scrollHeight > modalRef.current.clientHeight) {\r\n                  e.stopPropagation();\r\n                } else {\r\n                  e.preventDefault();\r\n                }\r\n              }}>{pjt.projectDescription}</p>\r\n              {(pjt.projectLink !== '' || pjt.projectRepo !== '') && (\r\n              <div className='project-links'>\r\n                {pjt.projectLink !== '' && (<a className='pjtlink' href={pjt.projectLink} target=\"_blank\" rel=\"noopener noreferrer\"><u>Link to App</u></a>)}\r\n                {pjt.projectRepo !== '' && (<a className='pjtlink' href={pjt.projectRepo} target=\"_blank\" rel=\"noopener noreferrer\"><u>Link to Github</u></a>)}\r\n              </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n});","import React from 'react';\r\nimport {Cell} from './Cell';\r\nimport {WelcomeText} from './WelcomeText';\r\nimport {createWelcomeBanner} from './WelcomeBanner';\r\nimport {ProjectView} from './ProjectView';\r\nimport './Grid.css';\r\n\r\n\r\nexport const Grid = React.memo(({isMobile, resolutionTier, numOfRows, numOfCols, cellSize, cellBorder}) => {\r\n\r\n  // inline style object to assign grid layout\r\n  const gridLayout = {\r\n    gridTemplateRows: `repeat(${numOfRows}, ${cellSize}px))`,\r\n    gridTemplateColumns: `repeat(${numOfCols}, ${cellSize}px))`,\r\n  };\r\n\r\n  // function to generate the cells in grid\r\n  const generateCells = (isMobile, tier, cellSize, cellBorder, numOfRows, numOfCols) => {\r\n    const cellList = [];\r\n    const banner = createWelcomeBanner(tier, numOfCols);\r\n    let type, id;\r\n    for (let r = 1; r <= numOfRows; r++) {\r\n      for (let c = 1; c <= numOfCols; c++) {\r\n        id = (r-1) * numOfCols + c;\r\n        if (banner.has(id)) {\r\n          type = 'cell-banner';\r\n        } else {\r\n          type = 'cell-default';\r\n        }\r\n        cellList.push((<Cell isMobile={isMobile} cellId={id} key={id} cellSize={cellSize} cellBorder={cellBorder} cellRow={r} cellCol={c} cellType={type} \r\n          numOfRows={numOfRows} numOfCols={numOfCols} />))\r\n      }     \r\n    }\r\n    return cellList;\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <>\r\n      <div className='grid-container'>\r\n        <div id='grid-view' className='grid' style={gridLayout}>\r\n          {generateCells(isMobile, resolutionTier, cellSize, cellBorder, numOfRows, numOfCols)}\r\n          <WelcomeText resolutionTier={resolutionTier} />\r\n          <ProjectView resolutionTier={resolutionTier} numOfRows={numOfRows} numOfCols={numOfCols} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n\r\n});","export const createWelcomeBanner = (tier, cols) => {\r\n  let startRow, startCol;\r\n\r\n  // pixel dot list of \"HELLO WORLD\" with first pixel starting from [0, 0]\r\n  const dotList = [\r\n    [0, 0], [0, 2], [0, 4], [0, 5], [0, 6], [0, 8], [0, 12], \r\n    [0, 16], [0, 17], [0, 18], [0, 19], [1, 0], [1, 2], [1, 4], \r\n    [1, 8], [1, 12], [1, 16], [1, 19], [2, 0], [2, 1], [2, 2], \r\n    [2, 4], [2, 5], [2, 8], [2, 12], [2, 16], [2, 19], [3, 0], \r\n    [3, 2], [3, 4], [3, 8], [3, 12], [3, 16], [3, 19], [4, 0], \r\n    [4, 2], [4, 4], [4, 5], [4, 6], [4, 8], [4, 9], [4, 10], \r\n    [4, 12], [4, 13], [4, 14], [4, 16], [4, 17], [4, 18], [4, 19], \r\n    [6, 0], [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], \r\n    [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], \r\n    [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [8, 0], [8, 4], \r\n    [8, 6], [8, 7], [8, 8], [8, 10], [8, 11], [8, 12], [8, 14], \r\n    [8, 17], [8, 18], [9, 0], [9, 4], [9, 6], [9, 8], [9, 10], \r\n    [9, 12], [9, 14], [9, 17], [9, 19], [10, 0], [10, 2], [10, 4], \r\n    [10, 6], [10, 8], [10, 10], [10, 11], [10, 14], [10, 17], [10, 19], \r\n    [11, 0], [11, 2], [11, 4], [11, 6], [11, 8], [11, 10], [11, 12], \r\n    [11, 14], [11, 17], [11, 19], [12, 1], [12, 3], [12, 6], [12, 7], \r\n    [12, 8], [12, 10], [12, 12], [12, 14], [12, 15], [12, 17], [12, 18]\r\n  ];\r\n\r\n  // actual \"HELLO WORLD\" starting position in grid depending on resolution tier\r\n  switch (tier) {\r\n    case 'S':\r\n      startRow = 8;\r\n      startCol = 3;\r\n      break;\r\n    case 'M':\r\n      startRow = 7;\r\n      startCol = 6;\r\n      break;\r\n    case 'L':\r\n      startRow = 7;\r\n      startCol = 9\r\n      break;\r\n    default:\r\n      startRow = 7;\r\n      startCol = 9;\r\n  }\r\n\r\n  \r\n  \r\n  return new Set(dotList.map((d) => (d[0] + startRow-1) * cols + d[1] + startCol));\r\n};","import React from 'react';\r\nimport './About.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faLinkedin, faGithub} from '@fortawesome/free-brands-svg-icons';\r\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const About = React.memo(({resolutionTier, aboutWidth}) => {\r\n\r\n  //inline style object for About Me section layout\r\n  const direction = resolutionTier === 'S' ? 'column' : 'row';\r\n  \r\n  const aboutLayout = {\r\n    width: `${aboutWidth}px`,\r\n    flexDirection: `${direction}`\r\n  };\r\n\r\n  const fontSize = {\r\n    fontSize: `${resolutionTier === 'L' ? 1 : 0.9}rem`\r\n  };\r\n\r\n  const iconLayout = {\r\n    justifyContent: resolutionTier === 'S' ? 'center' : 'flex-end',\r\n    marginTop: resolutionTier === 'S' ? '10px' : '5px'\r\n  };\r\n\r\n  const pictureSelf = '/images/picture-self.png';\r\n\r\n\r\n  return (\r\n    <div id='about' className='about-container' style={aboutLayout}>\r\n      <img className='picture-self' src={pictureSelf} alt='me'></img>\r\n      <div className='text-container'>\r\n        <p className='self-intro' style={fontSize}>\r\n          The name is <b>Ruopeng (Rupert) Deng</b>. Majored in Physics and Ph.D. in Materials Science.\r\n          <br></br>\r\n          After dedicating myself over a decade to studying physical world, specifically semiconductor processing, I started to wonder how the virtual world works under the hood.\r\n          <br></br>\r\n          The thought pulled me deeply in, and I began to teach myself, from simple python 'Hello World' to data structure and algorithm, to advanced topics like distributed system.\r\n          The more I learned, the more I appreciate the underlying intricacy and wisdom. It is truly fascinating!\r\n          <br></br>\r\n          The undertaking of learning and trying new things has never been so thrilling. I do hope that I could keep up this journey of exploration, \"to infinity and beyond\" ...\r\n        </p>\r\n        <div className='contact-icon-container' style={iconLayout}>\r\n          <a href='https://github.com/RupertDeng' target=\"_blank\" rel=\"noopener noreferrer\" className='contact-icon'>\r\n            <FontAwesomeIcon icon={faGithub}></FontAwesomeIcon>\r\n          </a>\r\n          <a href='https://www.linkedin.com/in/ruopeng-deng-2980244b/' target=\"_blank\" rel=\"noopener noreferrer\" className='contact-icon'>\r\n            <FontAwesomeIcon icon={faLinkedin}></FontAwesomeIcon>\r\n          </a>\r\n          <a href='mailto:rupert.deng@gmail.com' className='contact-icon'>\r\n            <FontAwesomeIcon icon={faEnvelopeSquare}></FontAwesomeIcon>\r\n          </a>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n});","import React from 'react';\r\nimport './Footer.css';\r\n\r\nexport const Footer = React.memo(({footerWidth}) => {\r\n\r\n  const footerLayout = {\r\n    width: `${footerWidth}px`\r\n  };\r\n\r\n  return (\r\n    <div className='footer' style={footerLayout}>\r\n      <p className='footer-text'>Copyright @ Ruopeng Deng 2021</p>\r\n    </div>\r\n  );\r\n\r\n});","import {NavBar} from './components/Navbar';\r\nimport {Grid} from './components/Grid';\r\nimport {About} from './components/About';\r\nimport {Footer} from './components/Footer';\r\nimport './App.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport smoothscroll from 'smoothscroll-polyfill';\r\n\r\nfunction App() {\r\n\r\n  // isMobile prop to idenfity mobile device and treat with diffent animation strategy\r\n  const isMobile = (typeof window.orientation !== \"undefined\") || (navigator.userAgent.indexOf('IEMobile') !== -1);\r\n\r\n  // kick off smoothscroll to handle ios scroll behavior;\r\n  smoothscroll.polyfill();\r\n\r\n  // useState and useEffect to update the window width upon resizing\r\n  const defineResolutionTier = (width) => {\r\n    let tier;\r\n    if (width <= 576) {\r\n      tier = 'S';\r\n    } else if (width <= 992) {\r\n      tier = 'M';\r\n    } else {\r\n      tier = 'L'\r\n    }\r\n    return tier;\r\n  };\r\n\r\n  const [resolutionTier, setResolutionTier] = useState(defineResolutionTier(window.innerWidth));\r\n\r\n  useEffect(() => {\r\n    const isMobile = (typeof window.orientation !== \"undefined\") || (navigator.userAgent.indexOf('IEMobile') !== -1);\r\n    const handleResize = (e) => {\r\n      if (!isMobile) {\r\n        if (e === 'resize') {setResolutionTier(defineResolutionTier(window.innerWidth))};\r\n      } else {\r\n        if (e === 'orientationchange') {setTimeout(\r\n          ()=>{setResolutionTier(defineResolutionTier(window.outerWidth))}, 100)};\r\n      }\r\n    }\r\n    const orientationChange = () => handleResize('orientationchange');\r\n    const sizeChange = () => handleResize('resize');\r\n\r\n    window.addEventListener('orientationchange', orientationChange);\r\n    window.addEventListener('resize', sizeChange);\r\n    return () => {window.removeEventListener('resize', sizeChange); window.removeEventListener('orientationchange', orientationChange)};\r\n  }, []);\r\n\r\n\r\n  // definte grid layout for responsiveness\r\n  const defineGridLayout = (tier) => {\r\n    let size, rows, cols;\r\n    if (tier === 'S') {\r\n      size = 15;\r\n      rows = 116;\r\n      cols = 24;\r\n    } else if (tier === 'M') {\r\n      size = 20;\r\n      rows = 72;\r\n      cols = 30;\r\n    } else {\r\n      size = 25;\r\n      rows = 55;\r\n      cols = 36;\r\n    }\r\n    return [rows, cols, size];\r\n  };\r\n\r\n  const [numOfRows, numOfCols, cellSize] = defineGridLayout(resolutionTier);\r\n  const cellBorder = 1;\r\n\r\n  // definte activeWidth and sizeUnit using the grid information for other components\r\n  const activeWidth = cellSize * numOfCols;\r\n  const sizeUnit = cellSize;\r\n  const navHeight = sizeUnit * (resolutionTier === 'S' ? 3.5 : 2.5);\r\n  const navWidth = activeWidth - sizeUnit;\r\n\r\n\r\n  return (\r\n    <div className='app'>\r\n      <NavBar resolutionTier={resolutionTier} navHeight={navHeight} navWidth={navWidth} sizeUnit={sizeUnit}/>\r\n      <Grid isMobile={isMobile} resolutionTier={resolutionTier} numOfRows={numOfRows} numOfCols={numOfCols} cellSize={cellSize} cellBorder={cellBorder} />\r\n      <About resolutionTier={resolutionTier} aboutWidth={activeWidth}/>\r\n      <Footer footerWidth={activeWidth} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}